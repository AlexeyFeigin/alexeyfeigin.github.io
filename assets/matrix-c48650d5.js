const dt=Object.prototype.toString;function k(s){const o=dt.call(s);return o.endsWith("Array]")&&!o.includes("Big")}function at(s){var o=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(!k(s))throw new TypeError("input must be an array");if(s.length===0)throw new TypeError("input must not be empty");var e=o.fromIndex,t=e===void 0?0:e,n=o.toIndex,r=n===void 0?s.length:n;if(t<0||t>=s.length||!Number.isInteger(t))throw new Error("fromIndex must be a positive integer smaller than length");if(r<=t||r>s.length||!Number.isInteger(r))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var i=s[t],h=t+1;h<r;h++)s[h]>i&&(i=s[h]);return i}function yt(s){var o=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(!k(s))throw new TypeError("input must be an array");if(s.length===0)throw new TypeError("input must not be empty");var e=o.fromIndex,t=e===void 0?0:e,n=o.toIndex,r=n===void 0?s.length:n;if(t<0||t>=s.length||!Number.isInteger(t))throw new Error("fromIndex must be a positive integer smaller than length");if(r<=t||r>s.length||!Number.isInteger(r))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var i=s[t],h=t+1;h<r;h++)s[h]<i&&(i=s[h]);return i}function Z(s){var o=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(k(s)){if(s.length===0)throw new TypeError("input must not be empty")}else throw new TypeError("input must be an array");var e;if(o.output!==void 0){if(!k(o.output))throw new TypeError("output option must be an array if specified");e=o.output}else e=new Array(s.length);var t=yt(s),n=at(s);if(t===n)throw new RangeError("minimum and maximum input values are equal. Cannot rescale a constant array");var r=o.min,i=r===void 0?o.autoMinMax?t:0:r,h=o.max,l=h===void 0?o.autoMinMax?n:1:h;if(i>=l)throw new RangeError("min option must be smaller than max option");for(var f=(l-i)/(n-t),u=0;u<s.length;u++)e[u]=(s[u]-t)*f+i;return e}const J=" ".repeat(2),tt=" ".repeat(4);function jt(){return et(this)}function et(s,o={}){const{maxRows:e=15,maxColumns:t=10,maxNumSize:n=8,padMinus:r="auto"}=o;return`${s.constructor.name} {
${J}[
${tt}${St(s,e,t,n,r)}
${J}]
${J}rows: ${s.rows}
${J}columns: ${s.columns}
}`}function St(s,o,e,t,n){const{rows:r,columns:i}=s,h=Math.min(r,o),l=Math.min(i,e),f=[];if(n==="auto"){n=!1;t:for(let u=0;u<h;u++)for(let c=0;c<l;c++)if(s.get(u,c)<0){n=!0;break t}}for(let u=0;u<h;u++){let c=[];for(let g=0;g<l;g++)c.push(Et(s.get(u,g),t,n));f.push(`${c.join(" ")}`)}return l!==i&&(f[f.length-1]+=` ... ${i-e} more columns`),h!==r&&f.push(`... ${r-o} more rows`),f.join(`
${tt}`)}function Et(s,o,e){return(s>=0&&e?` ${_(s,o-1)}`:_(s,o)).padEnd(o)}function _(s,o){let e=s.toString();if(e.length<=o)return e;let t=s.toFixed(o);if(t.length>o&&(t=s.toFixed(Math.max(0,o-(t.length-o)))),t.length<=o&&!t.startsWith("0.000")&&!t.startsWith("-0.000"))return t;let n=s.toExponential(o);return n.length>o&&(n=s.toExponential(Math.max(0,o-(n.length-o)))),n.slice(0)}function Rt(s,o){s.prototype.add=function(t){return typeof t=="number"?this.addS(t):this.addM(t)},s.prototype.addS=function(t){for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.set(n,r,this.get(n,r)+t);return this},s.prototype.addM=function(t){if(t=o.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.set(n,r,this.get(n,r)+t.get(n,r));return this},s.add=function(t,n){return new o(t).add(n)},s.prototype.sub=function(t){return typeof t=="number"?this.subS(t):this.subM(t)},s.prototype.subS=function(t){for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.set(n,r,this.get(n,r)-t);return this},s.prototype.subM=function(t){if(t=o.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.set(n,r,this.get(n,r)-t.get(n,r));return this},s.sub=function(t,n){return new o(t).sub(n)},s.prototype.subtract=s.prototype.sub,s.prototype.subtractS=s.prototype.subS,s.prototype.subtractM=s.prototype.subM,s.subtract=s.sub,s.prototype.mul=function(t){return typeof t=="number"?this.mulS(t):this.mulM(t)},s.prototype.mulS=function(t){for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.set(n,r,this.get(n,r)*t);return this},s.prototype.mulM=function(t){if(t=o.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.set(n,r,this.get(n,r)*t.get(n,r));return this},s.mul=function(t,n){return new o(t).mul(n)},s.prototype.multiply=s.prototype.mul,s.prototype.multiplyS=s.prototype.mulS,s.prototype.multiplyM=s.prototype.mulM,s.multiply=s.mul,s.prototype.div=function(t){return typeof t=="number"?this.divS(t):this.divM(t)},s.prototype.divS=function(t){for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.set(n,r,this.get(n,r)/t);return this},s.prototype.divM=function(t){if(t=o.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.set(n,r,this.get(n,r)/t.get(n,r));return this},s.div=function(t,n){return new o(t).div(n)},s.prototype.divide=s.prototype.div,s.prototype.divideS=s.prototype.divS,s.prototype.divideM=s.prototype.divM,s.divide=s.div,s.prototype.mod=function(t){return typeof t=="number"?this.modS(t):this.modM(t)},s.prototype.modS=function(t){for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.set(n,r,this.get(n,r)%t);return this},s.prototype.modM=function(t){if(t=o.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.set(n,r,this.get(n,r)%t.get(n,r));return this},s.mod=function(t,n){return new o(t).mod(n)},s.prototype.modulus=s.prototype.mod,s.prototype.modulusS=s.prototype.modS,s.prototype.modulusM=s.prototype.modM,s.modulus=s.mod,s.prototype.and=function(t){return typeof t=="number"?this.andS(t):this.andM(t)},s.prototype.andS=function(t){for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.set(n,r,this.get(n,r)&t);return this},s.prototype.andM=function(t){if(t=o.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.set(n,r,this.get(n,r)&t.get(n,r));return this},s.and=function(t,n){return new o(t).and(n)},s.prototype.or=function(t){return typeof t=="number"?this.orS(t):this.orM(t)},s.prototype.orS=function(t){for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.set(n,r,this.get(n,r)|t);return this},s.prototype.orM=function(t){if(t=o.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.set(n,r,this.get(n,r)|t.get(n,r));return this},s.or=function(t,n){return new o(t).or(n)},s.prototype.xor=function(t){return typeof t=="number"?this.xorS(t):this.xorM(t)},s.prototype.xorS=function(t){for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.set(n,r,this.get(n,r)^t);return this},s.prototype.xorM=function(t){if(t=o.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.set(n,r,this.get(n,r)^t.get(n,r));return this},s.xor=function(t,n){return new o(t).xor(n)},s.prototype.leftShift=function(t){return typeof t=="number"?this.leftShiftS(t):this.leftShiftM(t)},s.prototype.leftShiftS=function(t){for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.set(n,r,this.get(n,r)<<t);return this},s.prototype.leftShiftM=function(t){if(t=o.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.set(n,r,this.get(n,r)<<t.get(n,r));return this},s.leftShift=function(t,n){return new o(t).leftShift(n)},s.prototype.signPropagatingRightShift=function(t){return typeof t=="number"?this.signPropagatingRightShiftS(t):this.signPropagatingRightShiftM(t)},s.prototype.signPropagatingRightShiftS=function(t){for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.set(n,r,this.get(n,r)>>t);return this},s.prototype.signPropagatingRightShiftM=function(t){if(t=o.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.set(n,r,this.get(n,r)>>t.get(n,r));return this},s.signPropagatingRightShift=function(t,n){return new o(t).signPropagatingRightShift(n)},s.prototype.rightShift=function(t){return typeof t=="number"?this.rightShiftS(t):this.rightShiftM(t)},s.prototype.rightShiftS=function(t){for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.set(n,r,this.get(n,r)>>>t);return this},s.prototype.rightShiftM=function(t){if(t=o.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.set(n,r,this.get(n,r)>>>t.get(n,r));return this},s.rightShift=function(t,n){return new o(t).rightShift(n)},s.prototype.zeroFillRightShift=s.prototype.rightShift,s.prototype.zeroFillRightShiftS=s.prototype.rightShiftS,s.prototype.zeroFillRightShiftM=s.prototype.rightShiftM,s.zeroFillRightShift=s.rightShift,s.prototype.not=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,~this.get(t,n));return this},s.not=function(t){return new o(t).not()},s.prototype.abs=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.abs(this.get(t,n)));return this},s.abs=function(t){return new o(t).abs()},s.prototype.acos=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.acos(this.get(t,n)));return this},s.acos=function(t){return new o(t).acos()},s.prototype.acosh=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.acosh(this.get(t,n)));return this},s.acosh=function(t){return new o(t).acosh()},s.prototype.asin=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.asin(this.get(t,n)));return this},s.asin=function(t){return new o(t).asin()},s.prototype.asinh=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.asinh(this.get(t,n)));return this},s.asinh=function(t){return new o(t).asinh()},s.prototype.atan=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.atan(this.get(t,n)));return this},s.atan=function(t){return new o(t).atan()},s.prototype.atanh=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.atanh(this.get(t,n)));return this},s.atanh=function(t){return new o(t).atanh()},s.prototype.cbrt=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.cbrt(this.get(t,n)));return this},s.cbrt=function(t){return new o(t).cbrt()},s.prototype.ceil=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.ceil(this.get(t,n)));return this},s.ceil=function(t){return new o(t).ceil()},s.prototype.clz32=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.clz32(this.get(t,n)));return this},s.clz32=function(t){return new o(t).clz32()},s.prototype.cos=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.cos(this.get(t,n)));return this},s.cos=function(t){return new o(t).cos()},s.prototype.cosh=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.cosh(this.get(t,n)));return this},s.cosh=function(t){return new o(t).cosh()},s.prototype.exp=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.exp(this.get(t,n)));return this},s.exp=function(t){return new o(t).exp()},s.prototype.expm1=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.expm1(this.get(t,n)));return this},s.expm1=function(t){return new o(t).expm1()},s.prototype.floor=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.floor(this.get(t,n)));return this},s.floor=function(t){return new o(t).floor()},s.prototype.fround=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.fround(this.get(t,n)));return this},s.fround=function(t){return new o(t).fround()},s.prototype.log=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.log(this.get(t,n)));return this},s.log=function(t){return new o(t).log()},s.prototype.log1p=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.log1p(this.get(t,n)));return this},s.log1p=function(t){return new o(t).log1p()},s.prototype.log10=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.log10(this.get(t,n)));return this},s.log10=function(t){return new o(t).log10()},s.prototype.log2=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.log2(this.get(t,n)));return this},s.log2=function(t){return new o(t).log2()},s.prototype.round=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.round(this.get(t,n)));return this},s.round=function(t){return new o(t).round()},s.prototype.sign=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.sign(this.get(t,n)));return this},s.sign=function(t){return new o(t).sign()},s.prototype.sin=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.sin(this.get(t,n)));return this},s.sin=function(t){return new o(t).sin()},s.prototype.sinh=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.sinh(this.get(t,n)));return this},s.sinh=function(t){return new o(t).sinh()},s.prototype.sqrt=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.sqrt(this.get(t,n)));return this},s.sqrt=function(t){return new o(t).sqrt()},s.prototype.tan=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.tan(this.get(t,n)));return this},s.tan=function(t){return new o(t).tan()},s.prototype.tanh=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.tanh(this.get(t,n)));return this},s.tanh=function(t){return new o(t).tanh()},s.prototype.trunc=function(){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,Math.trunc(this.get(t,n)));return this},s.trunc=function(t){return new o(t).trunc()},s.pow=function(t,n){return new o(t).pow(n)},s.prototype.pow=function(t){return typeof t=="number"?this.powS(t):this.powM(t)},s.prototype.powS=function(t){for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.set(n,r,Math.pow(this.get(n,r),t));return this},s.prototype.powM=function(t){if(t=o.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.set(n,r,Math.pow(this.get(n,r),t.get(n,r)));return this}}function I(s,o,e){let t=e?s.rows:s.rows-1;if(o<0||o>t)throw new RangeError("Row index out of range")}function M(s,o,e){let t=e?s.columns:s.columns-1;if(o<0||o>t)throw new RangeError("Column index out of range")}function B(s,o){if(o.to1DArray&&(o=o.to1DArray()),o.length!==s.columns)throw new RangeError("vector size must be the same as the number of columns");return o}function D(s,o){if(o.to1DArray&&(o=o.to1DArray()),o.length!==s.rows)throw new RangeError("vector size must be the same as the number of rows");return o}function kt(s,o){if(!k(o))throw new TypeError("row indices must be an array");for(let e=0;e<o.length;e++)if(o[e]<0||o[e]>=s.rows)throw new RangeError("row indices are out of range")}function It(s,o){if(!k(o))throw new TypeError("column indices must be an array");for(let e=0;e<o.length;e++)if(o[e]<0||o[e]>=s.columns)throw new RangeError("column indices are out of range")}function x(s,o,e,t,n){if(arguments.length!==5)throw new RangeError("expected 4 arguments");if(K("startRow",o),K("endRow",e),K("startColumn",t),K("endColumn",n),o>e||t>n||o<0||o>=s.rows||e<0||e>=s.rows||t<0||t>=s.columns||n<0||n>=s.columns)throw new RangeError("Submatrix indices are out of range")}function H(s,o=0){let e=[];for(let t=0;t<s;t++)e.push(o);return e}function K(s,o){if(typeof o!="number")throw new TypeError(`${s} must be a number`)}function P(s){if(s.isEmpty())throw new Error("Empty matrix has no elements to index")}function Mt(s){let o=H(s.rows);for(let e=0;e<s.rows;++e)for(let t=0;t<s.columns;++t)o[e]+=s.get(e,t);return o}function Tt(s){let o=H(s.columns);for(let e=0;e<s.rows;++e)for(let t=0;t<s.columns;++t)o[t]+=s.get(e,t);return o}function Nt(s){let o=0;for(let e=0;e<s.rows;e++)for(let t=0;t<s.columns;t++)o+=s.get(e,t);return o}function vt(s){let o=H(s.rows,1);for(let e=0;e<s.rows;++e)for(let t=0;t<s.columns;++t)o[e]*=s.get(e,t);return o}function $t(s){let o=H(s.columns,1);for(let e=0;e<s.rows;++e)for(let t=0;t<s.columns;++t)o[t]*=s.get(e,t);return o}function qt(s){let o=1;for(let e=0;e<s.rows;e++)for(let t=0;t<s.columns;t++)o*=s.get(e,t);return o}function Ft(s,o,e){const t=s.rows,n=s.columns,r=[];for(let i=0;i<t;i++){let h=0,l=0,f=0;for(let u=0;u<n;u++)f=s.get(i,u)-e[i],h+=f,l+=f*f;o?r.push((l-h*h/n)/(n-1)):r.push((l-h*h/n)/n)}return r}function Vt(s,o,e){const t=s.rows,n=s.columns,r=[];for(let i=0;i<n;i++){let h=0,l=0,f=0;for(let u=0;u<t;u++)f=s.get(u,i)-e[i],h+=f,l+=f*f;o?r.push((l-h*h/t)/(t-1)):r.push((l-h*h/t)/t)}return r}function bt(s,o,e){const t=s.rows,n=s.columns,r=t*n;let i=0,h=0,l=0;for(let f=0;f<t;f++)for(let u=0;u<n;u++)l=s.get(f,u)-e,i+=l,h+=l*l;return o?(h-i*i/r)/(r-1):(h-i*i/r)/r}function zt(s,o){for(let e=0;e<s.rows;e++)for(let t=0;t<s.columns;t++)s.set(e,t,s.get(e,t)-o[e])}function Pt(s,o){for(let e=0;e<s.rows;e++)for(let t=0;t<s.columns;t++)s.set(e,t,s.get(e,t)-o[t])}function Bt(s,o){for(let e=0;e<s.rows;e++)for(let t=0;t<s.columns;t++)s.set(e,t,s.get(e,t)-o)}function Dt(s){const o=[];for(let e=0;e<s.rows;e++){let t=0;for(let n=0;n<s.columns;n++)t+=Math.pow(s.get(e,n),2)/(s.columns-1);o.push(Math.sqrt(t))}return o}function Ct(s,o){for(let e=0;e<s.rows;e++)for(let t=0;t<s.columns;t++)s.set(e,t,s.get(e,t)/o[e])}function Ot(s){const o=[];for(let e=0;e<s.columns;e++){let t=0;for(let n=0;n<s.rows;n++)t+=Math.pow(s.get(n,e),2)/(s.rows-1);o.push(Math.sqrt(t))}return o}function Wt(s,o){for(let e=0;e<s.rows;e++)for(let t=0;t<s.columns;t++)s.set(e,t,s.get(e,t)/o[t])}function Yt(s){const o=s.size-1;let e=0;for(let t=0;t<s.columns;t++)for(let n=0;n<s.rows;n++)e+=Math.pow(s.get(n,t),2)/o;return Math.sqrt(e)}function Gt(s,o){for(let e=0;e<s.rows;e++)for(let t=0;t<s.columns;t++)s.set(e,t,s.get(e,t)/o)}class w{static from1DArray(o,e,t){if(o*e!==t.length)throw new RangeError("data length does not match given dimensions");let r=new m(o,e);for(let i=0;i<o;i++)for(let h=0;h<e;h++)r.set(i,h,t[i*e+h]);return r}static rowVector(o){let e=new m(1,o.length);for(let t=0;t<o.length;t++)e.set(0,t,o[t]);return e}static columnVector(o){let e=new m(o.length,1);for(let t=0;t<o.length;t++)e.set(t,0,o[t]);return e}static zeros(o,e){return new m(o,e)}static ones(o,e){return new m(o,e).fill(1)}static rand(o,e,t={}){if(typeof t!="object")throw new TypeError("options must be an object");const{random:n=Math.random}=t;let r=new m(o,e);for(let i=0;i<o;i++)for(let h=0;h<e;h++)r.set(i,h,n());return r}static randInt(o,e,t={}){if(typeof t!="object")throw new TypeError("options must be an object");const{min:n=0,max:r=1e3,random:i=Math.random}=t;if(!Number.isInteger(n))throw new TypeError("min must be an integer");if(!Number.isInteger(r))throw new TypeError("max must be an integer");if(n>=r)throw new RangeError("min must be smaller than max");let h=r-n,l=new m(o,e);for(let f=0;f<o;f++)for(let u=0;u<e;u++){let c=n+Math.round(i()*h);l.set(f,u,c)}return l}static eye(o,e,t){e===void 0&&(e=o),t===void 0&&(t=1);let n=Math.min(o,e),r=this.zeros(o,e);for(let i=0;i<n;i++)r.set(i,i,t);return r}static diag(o,e,t){let n=o.length;e===void 0&&(e=n),t===void 0&&(t=e);let r=Math.min(n,e,t),i=this.zeros(e,t);for(let h=0;h<r;h++)i.set(h,h,o[h]);return i}static min(o,e){o=this.checkMatrix(o),e=this.checkMatrix(e);let t=o.rows,n=o.columns,r=new m(t,n);for(let i=0;i<t;i++)for(let h=0;h<n;h++)r.set(i,h,Math.min(o.get(i,h),e.get(i,h)));return r}static max(o,e){o=this.checkMatrix(o),e=this.checkMatrix(e);let t=o.rows,n=o.columns,r=new this(t,n);for(let i=0;i<t;i++)for(let h=0;h<n;h++)r.set(i,h,Math.max(o.get(i,h),e.get(i,h)));return r}static checkMatrix(o){return w.isMatrix(o)?o:new m(o)}static isMatrix(o){return o!=null&&o.klass==="Matrix"}get size(){return this.rows*this.columns}apply(o){if(typeof o!="function")throw new TypeError("callback must be a function");for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)o.call(this,e,t);return this}to1DArray(){let o=[];for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)o.push(this.get(e,t));return o}to2DArray(){let o=[];for(let e=0;e<this.rows;e++){o.push([]);for(let t=0;t<this.columns;t++)o[e].push(this.get(e,t))}return o}toJSON(){return this.to2DArray()}isRowVector(){return this.rows===1}isColumnVector(){return this.columns===1}isVector(){return this.rows===1||this.columns===1}isSquare(){return this.rows===this.columns}isEmpty(){return this.rows===0||this.columns===0}isSymmetric(){if(this.isSquare()){for(let o=0;o<this.rows;o++)for(let e=0;e<=o;e++)if(this.get(o,e)!==this.get(e,o))return!1;return!0}return!1}isEchelonForm(){let o=0,e=0,t=-1,n=!0,r=!1;for(;o<this.rows&&n;){for(e=0,r=!1;e<this.columns&&r===!1;)this.get(o,e)===0?e++:this.get(o,e)===1&&e>t?(r=!0,t=e):(n=!1,r=!0);o++}return n}isReducedEchelonForm(){let o=0,e=0,t=-1,n=!0,r=!1;for(;o<this.rows&&n;){for(e=0,r=!1;e<this.columns&&r===!1;)this.get(o,e)===0?e++:this.get(o,e)===1&&e>t?(r=!0,t=e):(n=!1,r=!0);for(let i=e+1;i<this.rows;i++)this.get(o,i)!==0&&(n=!1);o++}return n}echelonForm(){let o=this.clone(),e=0,t=0;for(;e<o.rows&&t<o.columns;){let n=e;for(let r=e;r<o.rows;r++)o.get(r,t)>o.get(n,t)&&(n=r);if(o.get(n,t)===0)t++;else{o.swapRows(e,n);let r=o.get(e,t);for(let i=t;i<o.columns;i++)o.set(e,i,o.get(e,i)/r);for(let i=e+1;i<o.rows;i++){let h=o.get(i,t)/o.get(e,t);o.set(i,t,0);for(let l=t+1;l<o.columns;l++)o.set(i,l,o.get(i,l)-o.get(e,l)*h)}e++,t++}}return o}reducedEchelonForm(){let o=this.echelonForm(),e=o.columns,t=o.rows,n=t-1;for(;n>=0;)if(o.maxRow(n)===0)n--;else{let r=0,i=!1;for(;r<t&&i===!1;)o.get(n,r)===1?i=!0:r++;for(let h=0;h<n;h++){let l=o.get(h,r);for(let f=r;f<e;f++){let u=o.get(h,f)-l*o.get(n,f);o.set(h,f,u)}}n--}return o}set(){throw new Error("set method is unimplemented")}get(){throw new Error("get method is unimplemented")}repeat(o={}){if(typeof o!="object")throw new TypeError("options must be an object");const{rows:e=1,columns:t=1}=o;if(!Number.isInteger(e)||e<=0)throw new TypeError("rows must be a positive integer");if(!Number.isInteger(t)||t<=0)throw new TypeError("columns must be a positive integer");let n=new m(this.rows*e,this.columns*t);for(let r=0;r<e;r++)for(let i=0;i<t;i++)n.setSubMatrix(this,this.rows*r,this.columns*i);return n}fill(o){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,o);return this}neg(){return this.mulS(-1)}getRow(o){I(this,o);let e=[];for(let t=0;t<this.columns;t++)e.push(this.get(o,t));return e}getRowVector(o){return m.rowVector(this.getRow(o))}setRow(o,e){I(this,o),e=B(this,e);for(let t=0;t<this.columns;t++)this.set(o,t,e[t]);return this}swapRows(o,e){I(this,o),I(this,e);for(let t=0;t<this.columns;t++){let n=this.get(o,t);this.set(o,t,this.get(e,t)),this.set(e,t,n)}return this}getColumn(o){M(this,o);let e=[];for(let t=0;t<this.rows;t++)e.push(this.get(t,o));return e}getColumnVector(o){return m.columnVector(this.getColumn(o))}setColumn(o,e){M(this,o),e=D(this,e);for(let t=0;t<this.rows;t++)this.set(t,o,e[t]);return this}swapColumns(o,e){M(this,o),M(this,e);for(let t=0;t<this.rows;t++){let n=this.get(t,o);this.set(t,o,this.get(t,e)),this.set(t,e,n)}return this}addRowVector(o){o=B(this,o);for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,this.get(e,t)+o[t]);return this}subRowVector(o){o=B(this,o);for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,this.get(e,t)-o[t]);return this}mulRowVector(o){o=B(this,o);for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,this.get(e,t)*o[t]);return this}divRowVector(o){o=B(this,o);for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,this.get(e,t)/o[t]);return this}addColumnVector(o){o=D(this,o);for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,this.get(e,t)+o[e]);return this}subColumnVector(o){o=D(this,o);for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,this.get(e,t)-o[e]);return this}mulColumnVector(o){o=D(this,o);for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,this.get(e,t)*o[e]);return this}divColumnVector(o){o=D(this,o);for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,this.get(e,t)/o[e]);return this}mulRow(o,e){I(this,o);for(let t=0;t<this.columns;t++)this.set(o,t,this.get(o,t)*e);return this}mulColumn(o,e){M(this,o);for(let t=0;t<this.rows;t++)this.set(t,o,this.get(t,o)*e);return this}max(o){if(this.isEmpty())return NaN;switch(o){case"row":{const e=new Array(this.rows).fill(Number.NEGATIVE_INFINITY);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.get(t,n)>e[t]&&(e[t]=this.get(t,n));return e}case"column":{const e=new Array(this.columns).fill(Number.NEGATIVE_INFINITY);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.get(t,n)>e[n]&&(e[n]=this.get(t,n));return e}case void 0:{let e=this.get(0,0);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.get(t,n)>e&&(e=this.get(t,n));return e}default:throw new Error(`invalid option: ${o}`)}}maxIndex(){P(this);let o=this.get(0,0),e=[0,0];for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.get(t,n)>o&&(o=this.get(t,n),e[0]=t,e[1]=n);return e}min(o){if(this.isEmpty())return NaN;switch(o){case"row":{const e=new Array(this.rows).fill(Number.POSITIVE_INFINITY);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.get(t,n)<e[t]&&(e[t]=this.get(t,n));return e}case"column":{const e=new Array(this.columns).fill(Number.POSITIVE_INFINITY);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.get(t,n)<e[n]&&(e[n]=this.get(t,n));return e}case void 0:{let e=this.get(0,0);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.get(t,n)<e&&(e=this.get(t,n));return e}default:throw new Error(`invalid option: ${o}`)}}minIndex(){P(this);let o=this.get(0,0),e=[0,0];for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.get(t,n)<o&&(o=this.get(t,n),e[0]=t,e[1]=n);return e}maxRow(o){if(I(this,o),this.isEmpty())return NaN;let e=this.get(o,0);for(let t=1;t<this.columns;t++)this.get(o,t)>e&&(e=this.get(o,t));return e}maxRowIndex(o){I(this,o),P(this);let e=this.get(o,0),t=[o,0];for(let n=1;n<this.columns;n++)this.get(o,n)>e&&(e=this.get(o,n),t[1]=n);return t}minRow(o){if(I(this,o),this.isEmpty())return NaN;let e=this.get(o,0);for(let t=1;t<this.columns;t++)this.get(o,t)<e&&(e=this.get(o,t));return e}minRowIndex(o){I(this,o),P(this);let e=this.get(o,0),t=[o,0];for(let n=1;n<this.columns;n++)this.get(o,n)<e&&(e=this.get(o,n),t[1]=n);return t}maxColumn(o){if(M(this,o),this.isEmpty())return NaN;let e=this.get(0,o);for(let t=1;t<this.rows;t++)this.get(t,o)>e&&(e=this.get(t,o));return e}maxColumnIndex(o){M(this,o),P(this);let e=this.get(0,o),t=[0,o];for(let n=1;n<this.rows;n++)this.get(n,o)>e&&(e=this.get(n,o),t[0]=n);return t}minColumn(o){if(M(this,o),this.isEmpty())return NaN;let e=this.get(0,o);for(let t=1;t<this.rows;t++)this.get(t,o)<e&&(e=this.get(t,o));return e}minColumnIndex(o){M(this,o),P(this);let e=this.get(0,o),t=[0,o];for(let n=1;n<this.rows;n++)this.get(n,o)<e&&(e=this.get(n,o),t[0]=n);return t}diag(){let o=Math.min(this.rows,this.columns),e=[];for(let t=0;t<o;t++)e.push(this.get(t,t));return e}norm(o="frobenius"){let e=0;if(o==="max")return this.max();if(o==="frobenius"){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)e=e+this.get(t,n)*this.get(t,n);return Math.sqrt(e)}else throw new RangeError(`unknown norm type: ${o}`)}cumulativeSum(){let o=0;for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)o+=this.get(e,t),this.set(e,t,o);return this}dot(o){w.isMatrix(o)&&(o=o.to1DArray());let e=this.to1DArray();if(e.length!==o.length)throw new RangeError("vectors do not have the same size");let t=0;for(let n=0;n<e.length;n++)t+=e[n]*o[n];return t}mmul(o){o=m.checkMatrix(o);let e=this.rows,t=this.columns,n=o.columns,r=new m(e,n),i=new Float64Array(t);for(let h=0;h<n;h++){for(let l=0;l<t;l++)i[l]=o.get(l,h);for(let l=0;l<e;l++){let f=0;for(let u=0;u<t;u++)f+=this.get(l,u)*i[u];r.set(l,h,f)}}return r}strassen2x2(o){o=m.checkMatrix(o);let e=new m(2,2);const t=this.get(0,0),n=o.get(0,0),r=this.get(0,1),i=o.get(0,1),h=this.get(1,0),l=o.get(1,0),f=this.get(1,1),u=o.get(1,1),c=(t+f)*(n+u),g=(h+f)*n,a=t*(i-u),y=f*(l-n),d=(t+r)*u,p=(h-t)*(n+i),j=(r-f)*(l+u),S=c+y-d+j,T=a+d,N=g+y,F=c-g+a+p;return e.set(0,0,S),e.set(0,1,T),e.set(1,0,N),e.set(1,1,F),e}strassen3x3(o){o=m.checkMatrix(o);let e=new m(3,3);const t=this.get(0,0),n=this.get(0,1),r=this.get(0,2),i=this.get(1,0),h=this.get(1,1),l=this.get(1,2),f=this.get(2,0),u=this.get(2,1),c=this.get(2,2),g=o.get(0,0),a=o.get(0,1),y=o.get(0,2),d=o.get(1,0),p=o.get(1,1),j=o.get(1,2),S=o.get(2,0),T=o.get(2,1),N=o.get(2,2),F=(t+n+r-i-h-u-c)*p,C=(t-i)*(-a+p),V=h*(-g+a+d-p-j-S+N),q=(-t+i+h)*(g-a+p),O=(i+h)*(-g+a),v=t*g,b=(-t+f+u)*(g-y+j),W=(-t+f)*(y-j),Y=(f+u)*(-g+y),L=(t+n+r-h-l-f-u)*j,Q=u*(-g+y+d-p-j-S+T),E=(-r+u+c)*(p+S-T),G=(r-c)*(p-T),$=r*S,z=(u+c)*(-S+T),R=(-r+h+l)*(j+S-N),U=(r-l)*(j-N),X=(h+l)*(-S+N),ot=n*d,nt=l*T,st=i*y,rt=f*a,it=c*N,ht=v+$+ot,ut=F+q+O+v+E+$+z,lt=v+b+Y+L+$+R+X,ft=C+V+q+v+$+R+U,ct=C+q+O+v+nt,wt=$+R+U+X+st,mt=v+b+W+Q+E+G+$,gt=E+G+$+z+rt,pt=v+b+W+Y+it;return e.set(0,0,ht),e.set(0,1,ut),e.set(0,2,lt),e.set(1,0,ft),e.set(1,1,ct),e.set(1,2,wt),e.set(2,0,mt),e.set(2,1,gt),e.set(2,2,pt),e}mmulStrassen(o){o=m.checkMatrix(o);let e=this.clone(),t=e.rows,n=e.columns,r=o.rows,i=o.columns;n!==r&&console.warn(`Multiplying ${t} x ${n} and ${r} x ${i} matrix: dimensions do not match.`);function h(c,g,a){let y=c.rows,d=c.columns;if(y===g&&d===a)return c;{let p=w.zeros(g,a);return p=p.setSubMatrix(c,0,0),p}}let l=Math.max(t,r),f=Math.max(n,i);e=h(e,l,f),o=h(o,l,f);function u(c,g,a,y){if(a<=512||y<=512)return c.mmul(g);a%2===1&&y%2===1?(c=h(c,a+1,y+1),g=h(g,a+1,y+1)):a%2===1?(c=h(c,a+1,y),g=h(g,a+1,y)):y%2===1&&(c=h(c,a,y+1),g=h(g,a,y+1));let d=parseInt(c.rows/2,10),p=parseInt(c.columns/2,10),j=c.subMatrix(0,d-1,0,p-1),S=g.subMatrix(0,d-1,0,p-1),T=c.subMatrix(0,d-1,p,c.columns-1),N=g.subMatrix(0,d-1,p,g.columns-1),F=c.subMatrix(d,c.rows-1,0,p-1),C=g.subMatrix(d,g.rows-1,0,p-1),V=c.subMatrix(d,c.rows-1,p,c.columns-1),q=g.subMatrix(d,g.rows-1,p,g.columns-1),O=u(w.add(j,V),w.add(S,q),d,p),v=u(w.add(F,V),S,d,p),b=u(j,w.sub(N,q),d,p),W=u(V,w.sub(C,S),d,p),Y=u(w.add(j,T),q,d,p),L=u(w.sub(F,j),w.add(S,N),d,p),Q=u(w.sub(T,V),w.add(C,q),d,p),E=w.add(O,W);E.sub(Y),E.add(Q);let G=w.add(b,Y),$=w.add(v,W),z=w.sub(O,v);z.add(b),z.add(L);let R=w.zeros(2*E.rows,2*E.columns);return R=R.setSubMatrix(E,0,0),R=R.setSubMatrix(G,E.rows,0),R=R.setSubMatrix($,0,E.columns),R=R.setSubMatrix(z,E.rows,E.columns),R.subMatrix(0,a-1,0,y-1)}return u(e,o,l,f)}scaleRows(o={}){if(typeof o!="object")throw new TypeError("options must be an object");const{min:e=0,max:t=1}=o;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(t))throw new TypeError("max must be a number");if(e>=t)throw new RangeError("min must be smaller than max");let n=new m(this.rows,this.columns);for(let r=0;r<this.rows;r++){const i=this.getRow(r);i.length>0&&Z(i,{min:e,max:t,output:i}),n.setRow(r,i)}return n}scaleColumns(o={}){if(typeof o!="object")throw new TypeError("options must be an object");const{min:e=0,max:t=1}=o;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(t))throw new TypeError("max must be a number");if(e>=t)throw new RangeError("min must be smaller than max");let n=new m(this.rows,this.columns);for(let r=0;r<this.columns;r++){const i=this.getColumn(r);i.length&&Z(i,{min:e,max:t,output:i}),n.setColumn(r,i)}return n}flipRows(){const o=Math.ceil(this.columns/2);for(let e=0;e<this.rows;e++)for(let t=0;t<o;t++){let n=this.get(e,t),r=this.get(e,this.columns-1-t);this.set(e,t,r),this.set(e,this.columns-1-t,n)}return this}flipColumns(){const o=Math.ceil(this.rows/2);for(let e=0;e<this.columns;e++)for(let t=0;t<o;t++){let n=this.get(t,e),r=this.get(this.rows-1-t,e);this.set(t,e,r),this.set(this.rows-1-t,e,n)}return this}kroneckerProduct(o){o=m.checkMatrix(o);let e=this.rows,t=this.columns,n=o.rows,r=o.columns,i=new m(e*n,t*r);for(let h=0;h<e;h++)for(let l=0;l<t;l++)for(let f=0;f<n;f++)for(let u=0;u<r;u++)i.set(n*h+f,r*l+u,this.get(h,l)*o.get(f,u));return i}kroneckerSum(o){if(o=m.checkMatrix(o),!this.isSquare()||!o.isSquare())throw new Error("Kronecker Sum needs two Square Matrices");let e=this.rows,t=o.rows,n=this.kroneckerProduct(m.eye(t,t)),r=m.eye(e,e).kroneckerProduct(o);return n.add(r)}transpose(){let o=new m(this.columns,this.rows);for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)o.set(t,e,this.get(e,t));return o}sortRows(o=A){for(let e=0;e<this.rows;e++)this.setRow(e,this.getRow(e).sort(o));return this}sortColumns(o=A){for(let e=0;e<this.columns;e++)this.setColumn(e,this.getColumn(e).sort(o));return this}subMatrix(o,e,t,n){x(this,o,e,t,n);let r=new m(e-o+1,n-t+1);for(let i=o;i<=e;i++)for(let h=t;h<=n;h++)r.set(i-o,h-t,this.get(i,h));return r}subMatrixRow(o,e,t){if(e===void 0&&(e=0),t===void 0&&(t=this.columns-1),e>t||e<0||e>=this.columns||t<0||t>=this.columns)throw new RangeError("Argument out of range");let n=new m(o.length,t-e+1);for(let r=0;r<o.length;r++)for(let i=e;i<=t;i++){if(o[r]<0||o[r]>=this.rows)throw new RangeError(`Row index out of range: ${o[r]}`);n.set(r,i-e,this.get(o[r],i))}return n}subMatrixColumn(o,e,t){if(e===void 0&&(e=0),t===void 0&&(t=this.rows-1),e>t||e<0||e>=this.rows||t<0||t>=this.rows)throw new RangeError("Argument out of range");let n=new m(t-e+1,o.length);for(let r=0;r<o.length;r++)for(let i=e;i<=t;i++){if(o[r]<0||o[r]>=this.columns)throw new RangeError(`Column index out of range: ${o[r]}`);n.set(i-e,r,this.get(i,o[r]))}return n}setSubMatrix(o,e,t){if(o=m.checkMatrix(o),o.isEmpty())return this;let n=e+o.rows-1,r=t+o.columns-1;x(this,e,n,t,r);for(let i=0;i<o.rows;i++)for(let h=0;h<o.columns;h++)this.set(e+i,t+h,o.get(i,h));return this}selection(o,e){kt(this,o),It(this,e);let t=new m(o.length,e.length);for(let n=0;n<o.length;n++){let r=o[n];for(let i=0;i<e.length;i++){let h=e[i];t.set(n,i,this.get(r,h))}}return t}trace(){let o=Math.min(this.rows,this.columns),e=0;for(let t=0;t<o;t++)e+=this.get(t,t);return e}clone(){let o=new m(this.rows,this.columns);for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)o.set(e,t,this.get(e,t));return o}sum(o){switch(o){case"row":return Mt(this);case"column":return Tt(this);case void 0:return Nt(this);default:throw new Error(`invalid option: ${o}`)}}product(o){switch(o){case"row":return vt(this);case"column":return $t(this);case void 0:return qt(this);default:throw new Error(`invalid option: ${o}`)}}mean(o){const e=this.sum(o);switch(o){case"row":{for(let t=0;t<this.rows;t++)e[t]/=this.columns;return e}case"column":{for(let t=0;t<this.columns;t++)e[t]/=this.rows;return e}case void 0:return e/this.size;default:throw new Error(`invalid option: ${o}`)}}variance(o,e={}){if(typeof o=="object"&&(e=o,o=void 0),typeof e!="object")throw new TypeError("options must be an object");const{unbiased:t=!0,mean:n=this.mean(o)}=e;if(typeof t!="boolean")throw new TypeError("unbiased must be a boolean");switch(o){case"row":{if(!k(n))throw new TypeError("mean must be an array");return Ft(this,t,n)}case"column":{if(!k(n))throw new TypeError("mean must be an array");return Vt(this,t,n)}case void 0:{if(typeof n!="number")throw new TypeError("mean must be a number");return bt(this,t,n)}default:throw new Error(`invalid option: ${o}`)}}standardDeviation(o,e){typeof o=="object"&&(e=o,o=void 0);const t=this.variance(o,e);if(o===void 0)return Math.sqrt(t);for(let n=0;n<t.length;n++)t[n]=Math.sqrt(t[n]);return t}center(o,e={}){if(typeof o=="object"&&(e=o,o=void 0),typeof e!="object")throw new TypeError("options must be an object");const{center:t=this.mean(o)}=e;switch(o){case"row":{if(!k(t))throw new TypeError("center must be an array");return zt(this,t),this}case"column":{if(!k(t))throw new TypeError("center must be an array");return Pt(this,t),this}case void 0:{if(typeof t!="number")throw new TypeError("center must be a number");return Bt(this,t),this}default:throw new Error(`invalid option: ${o}`)}}scale(o,e={}){if(typeof o=="object"&&(e=o,o=void 0),typeof e!="object")throw new TypeError("options must be an object");let t=e.scale;switch(o){case"row":{if(t===void 0)t=Dt(this);else if(!k(t))throw new TypeError("scale must be an array");return Ct(this,t),this}case"column":{if(t===void 0)t=Ot(this);else if(!k(t))throw new TypeError("scale must be an array");return Wt(this,t),this}case void 0:{if(t===void 0)t=Yt(this);else if(typeof t!="number")throw new TypeError("scale must be a number");return Gt(this,t),this}default:throw new Error(`invalid option: ${o}`)}}toString(o){return et(this,o)}}w.prototype.klass="Matrix";typeof Symbol<"u"&&(w.prototype[Symbol.for("nodejs.util.inspect.custom")]=jt);function A(s,o){return s-o}function Jt(s){return s.every(o=>typeof o=="number")}w.random=w.rand;w.randomInt=w.randInt;w.diagonal=w.diag;w.prototype.diagonal=w.prototype.diag;w.identity=w.eye;w.prototype.negate=w.prototype.neg;w.prototype.tensorProduct=w.prototype.kroneckerProduct;class m extends w{constructor(o,e){if(super(),m.isMatrix(o))return o.clone();if(Number.isInteger(o)&&o>=0)if(this.data=[],Number.isInteger(e)&&e>=0)for(let t=0;t<o;t++)this.data.push(new Float64Array(e));else throw new TypeError("nColumns must be a positive integer");else if(k(o)){const t=o;if(o=t.length,e=o?t[0].length:0,typeof e!="number")throw new TypeError("Data must be a 2D array with at least one element");this.data=[];for(let n=0;n<o;n++){if(t[n].length!==e)throw new RangeError("Inconsistent array dimensions");if(!Jt(t[n]))throw new TypeError("Input data contains non-numeric values");this.data.push(Float64Array.from(t[n]))}}else throw new TypeError("First argument must be a positive number or an array");this.rows=o,this.columns=e}set(o,e,t){return this.data[o][e]=t,this}get(o,e){return this.data[o][e]}removeRow(o){return I(this,o),this.data.splice(o,1),this.rows-=1,this}addRow(o,e){return e===void 0&&(e=o,o=this.rows),I(this,o,!0),e=Float64Array.from(B(this,e)),this.data.splice(o,0,e),this.rows+=1,this}removeColumn(o){M(this,o);for(let e=0;e<this.rows;e++){const t=new Float64Array(this.columns-1);for(let n=0;n<o;n++)t[n]=this.data[e][n];for(let n=o+1;n<this.columns;n++)t[n-1]=this.data[e][n];this.data[e]=t}return this.columns-=1,this}addColumn(o,e){typeof e>"u"&&(e=o,o=this.columns),M(this,o,!0),e=D(this,e);for(let t=0;t<this.rows;t++){const n=new Float64Array(this.columns+1);let r=0;for(;r<o;r++)n[r]=this.data[t][r];for(n[r++]=e[t];r<this.columns+1;r++)n[r]=this.data[t][r-1];this.data[t]=n}return this.columns+=1,this}}Rt(w,m);export{m as M};
